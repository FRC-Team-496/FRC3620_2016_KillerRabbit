// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3620.FRC3620_Killer_Rabbit.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3620.FRC3620_Killer_Rabbit.Robot;

/**
 *
 */
public class ArmManualCommand extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ArmManualCommand() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.armSubsystem);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    
    public void manualOverride()
    {
    	
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() 
    {
    	double leftTrigger = Robot.oi.driverJoystick.getRawAxis(5);
    	double rightTrigger = Robot.oi.driverJoystick.getRawAxis(6);
    	
    	//double trigger = leftTrigger - rightTrigger;
    	if (leftTrigger > 0.2 || rightTrigger > 0.2) {
    		// the driver is leaning on the triggers. let's go into manual mode 
    		if (leftTrigger > 0.2) {
    			Robot.armSubsystem.setManualPower(leftTrigger);
    		} else if (rightTrigger > 0.2) {
    			Robot.armSubsystem.setManualPower(-rightTrigger);
    		}
    		
    	} else {
    		// the driver is not fiddling with the triggers. leave the CANTalon in automatic mode
    		Robot.armSubsystem.goIntoAutomaticMode();
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
