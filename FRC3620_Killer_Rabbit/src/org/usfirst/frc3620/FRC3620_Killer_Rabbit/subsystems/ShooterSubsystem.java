// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3620.FRC3620_Killer_Rabbit.subsystems;

import org.usfirst.frc3620.FRC3620_Killer_Rabbit.RobotMap;
import org.usfirst.frc3620.FRC3620_Killer_Rabbit.commands.*;

import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CANTalon.FeedbackDevice;
import edu.wpi.first.wpilibj.CANTalon.TalonControlMode;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class ShooterSubsystem extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon shooterCANTalon1 = RobotMap.shooterSubsystemShooterCANTalon1;
    private final SpeedController shooterPositionTalon = RobotMap.shooterSubsystemShooterPositionTalon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public ShooterSubsystem() {
		super();
		// TODO Auto-generated constructor stub
		shooterCANTalon1.changeControlMode(TalonControlMode.Speed);  //set the control mode to hold velocity
		shooterCANTalon1.setFeedbackDevice(FeedbackDevice.QuadEncoder);  //RS7 is a Quad Encoder
		shooterCANTalon1.configEncoderCodesPerRev(12);  //from the RS7 website
		shooterCANTalon1.reverseSensor(false);
		shooterCANTalon1.setP(1);
		shooterCANTalon1.setI(0);
		shooterCANTalon1.setD(0);
		shooterCANTalon1.setF(0);
	}
    
    public void ShootOut()
    {
    	shooterCANTalon1.set(1);
    }
    
    public void ShootOutStop()
    {
    	shooterCANTalon1.set(0);
    }
    
    public void lowerShooter()  //shooter only needs to be lowered when going under low bar
    {
    	shooterPositionTalon.set(0);  //put value here that will run
    }
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
}

